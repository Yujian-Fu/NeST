from cProfile import label
import code
from sqlite3 import Time
from turtle import color
import numpy as np 
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
from scipy.optimize import leastsq
import math
import random
from matplotlib.ticker import FuncFormatter
import matplotlib.ticker as mtick

# target Recall = 0.45
# 2000 IniM, 2000 batch
NC = 72000
Time = [0.038826 , 0.064103 , 0.078861 , 0.092765 , 0.109915 , 0.131554 , 0.144910 , 0.159306 , 0.155543 , 0.164261 , ]
Recall1 = [0.375560 , 0.423530 , 0.442210 , 0.452270 , 0.458110 , 0.462280 , 0.464880 , 0.466700 , 0.467730 , 0.468740 , ]
Recall = [0.594400 , 0.695400 , 0.739500 , 0.761000 , 0.774800 , 0.783900 , 0.790300 , 0.793800 , 0.797400 , 0.800900 , ]
plt.plot(Time, Recall1, label = "0.45 2000 - 1")

NC = 64000
Time = [0.037131 , 0.053639 , 0.067710 , 0.080560 , 0.092655 , 0.104704 , 0.115639 , 0.127135 , 0.137192 , 0.147359 , ]
Recall1 = [0.371910 , 0.419880 , 0.438670 , 0.448040 , 0.453950 , 0.457380 , 0.459650 , 0.461420 , 0.462590 , 0.463720 , ]
Recall = [0.590400 , 0.693500 , 0.735400 , 0.756600 , 0.771300 , 0.781400 , 0.788000 , 0.791700 , 0.793500 , 0.796700 , ]
plt.plot(Time, Recall1, label = "0.45 2000 - 2")

# Target recall = 0.43
# 20000 IniM, 1000 batch
NC = 51200
Time = [0.040320 , 0.051522 , 0.064132 , 0.076200 , 0.090063 , 0.111439 , 0.125535 , 0.122334 , 0.169307 , 0.172002 , ]
Recall1 = [0.364110 , 0.413720 , 0.432030 , 0.441280 , 0.446960 , 0.450460 , 0.453000 , 0.454840 , 0.456170 , 0.457150 , ]
Recall = [0.585600 , 0.684800 , 0.725700 , 0.746800 , 0.761000 , 0.767200 , 0.773100 , 0.777700 , 0.781100 , 0.783500 , ]
plt.plot(Time, Recall1, label = "0.43 1000")
# Target recall = 0.41
# 10000 IniM, 1000 batch
NC = 21000
Time = [0.030621 , 0.042510 , 0.053627 , 0.063943 , 0.074394 , 0.083929 , 0.093891 , 0.102475 , 0.112113 , 0.120917 , ]
Recall1 = [0.367700 , 0.404580 , 0.417480 , 0.423790 , 0.427560 , 0.429640 , 0.431200 , 0.432560 , 0.433170 , 0.433640 , ]
Recall = [0.602700 , 0.683800 , 0.718100 , 0.733200 , 0.743600 , 0.748600 , 0.752900 , 0.756900 , 0.758700 , 0.761000 , ]
plt.plot(Time, Recall1, label = "1000")
# 10000 IniM, 2000 batch
NC = 30000
Time = [0.032071 , 0.044507 , 0.056276 , 0.066516 , 0.076780 , 0.086207 , 0.095188 , 0.105282 , 0.112905 , 0.121706 , ]
Recall1 = [0.360550 , 0.401800 , 0.417250 , 0.424460 , 0.429030 , 0.432030 , 0.434020 , 0.435500 , 0.436560 , 0.437320 , ]
Recall = [0.587700 , 0.673500 , 0.712900 , 0.730900 , 0.742800 , 0.751200 , 0.756200 , 0.760000 , 0.762800 , 0.765000 , ]
plt.plot(Time, Recall1, label = "2000")
# 10000 IniM, 1500 batch
NC = 26000
Time = [0.030941 , 0.043456 , 0.054416 , 0.064648 , 0.074791 , 0.084677 , 0.093647 , 0.102645 , 0.112467 , 0.120828 , ]
Recall1 = [0.363630 , 0.404210 , 0.419590 , 0.426370 , 0.429950 , 0.432460 , 0.434220 , 0.435480 , 0.436570 , 0.437290 , ]
Recall = [0.593800 , 0.680900 , 0.719100 , 0.735400 , 0.745600 , 0.753300 , 0.759000 , 0.763300 , 0.765700 , 0.767600 , ]
plt.plot(Time, Recall1, label = "1500")
# 10000 IniM, 500 batch
NC = 29675
Time = [0.031982 , 0.045209 , 0.056505 , 0.067006 , 0.077399 , 0.086668 , 0.096587 , 0.105901 , 0.115872 , 0.124599 , ]
Recall1 = [0.361230 , 0.401790 , 0.417830 , 0.425370 , 0.429670 , 0.432260 , 0.434380 , 0.435930 , 0.437180 , 0.437970 , ]
Recall = [0.589300 , 0.674100 , 0.710900 , 0.729900 , 0.742200 , 0.749100 , 0.755400 , 0.759900 , 0.762000 , 0.764100 , ]
plt.plot(Time, Recall1, label = "500")
plt.legend()
plt.show()


# 10000 IniM, 500 batch
NC = 29675
Time = [0.030678 , 0.044138 , 0.055380 , 0.065554 , 0.076566 , 0.085951 , 0.094838 , 0.104136 , 0.114283 , 0.123092 , ]
Recall1 = [0.297500 , 0.324100 , 0.334200 , 0.338100 , 0.339900 , 0.342200 , 0.342800 , 0.343600 , 0.343800 , 0.344000 , ]
Recall = [0.297500 , 0.324100 , 0.334200 , 0.338100 , 0.339900 , 0.342200 , 0.342800 , 0.343600 , 0.343800 , 0.344000 , ]
plt.plot(Time, Recall1, label = "500")


# 10000 IniM, 1500 batch
NC = 26000
Time = [0.029709 , 0.042817 , 0.053610 , 0.063349 , 0.073295 , 0.083078 , 0.092351 , 0.101457 , 0.110512 , 0.119347 , ]
Recall1 = [0.294800 , 0.318200 , 0.325100 , 0.328400 , 0.330800 , 0.333000 , 0.333500 , 0.334700 , 0.335200 , 0.335500 , ]
Recall = [0.294800 , 0.318200 , 0.325100 , 0.328400 , 0.330800 , 0.333000 , 0.333500 , 0.334700 , 0.335200 , 0.335500 , ]
plt.plot(Time, Recall1, label = "1500")

# 10000 IniM, 2000 batch
NC = 30000
Time = [0.031215 , 0.043641 , 0.055056 , 0.065236 , 0.075568 , 0.085935 , 0.095060 , 0.104013 , 0.111728 , 0.121014 , ]
Recall1 = [0.298700 , 0.323100 , 0.334300 , 0.338400 , 0.340900 , 0.342100 , 0.343100 , 0.343800 , 0.344500 , 0.345000 , ]
Recall = [0.298700 , 0.323100 , 0.334300 , 0.338400 , 0.340900 , 0.342100 , 0.343100 , 0.343800 , 0.344500 , 0.345000 , ]
plt.plot(Time, Recall1, label = "2000")

# 10000 batch, 1000 batch
NC = 22100
Time = [0.029557 , 0.042214 , 0.053457 , 0.064865 , 0.074303 , 0.085302 , 0.094494 , 0.104289 , 0.113742 , 0.123965 , ]
Recall1 = [0.297700 , 0.321600 , 0.328800 , 0.331400 , 0.334000 , 0.335700 , 0.336900 , 0.337500 , 0.337800 , 0.338300 , ]
Recall = [0.297700 , 0.321600 , 0.328800 , 0.331400 , 0.334000 , 0.335700 , 0.336900 , 0.337500 , 0.337800 , 0.338300 , ]
plt.plot(Time, Recall1, label = "1000")
plt.legend()
plt.show()


nv =   [9212, 9304, 9395, 9486, 9577, 9668, 9759, 9849, 9940, 10031]
time = [0.115352, 0.120868, 0.117645, 0.118344, 0.118984, 0.121829, 0.118877, 0.120357, 0.122182, 0.115081]

nv = [9412, 9497, 9582, 9667, 9751, 9836, 9920, 10005]
time = [0.11786, 0.109701, 0.113734, 0.107263, 0.108694, 0.109072, 0.116408, 0.118195]
plt.plot(nv, time)
plt.show()


''''''
# 8 bytes
nc = np.array([1000,5000,10000,20000,40000,80000,160000]) * 100
NumVectors = [13066, 6024, 4413, 3108, 2189, 1482, 859]
AssignError = [52564,46099,43604,40158,36996.1,32796, 26847.9]
QuantizeError = [20454.7,18347.5,17998.9,16894,15908,14453.4, 12168.8]
Recall1 = [0.2858,0.3109,0.3171,0.3386,0.3456,0.369, 0.403]
Recall10_10 = [0.37489,0.40625,0.41027,0.43063,0.4488,0.469, 0.5061]
plt.plot(nc, QuantizeError, label = "8 Bytes", marker = "o")

# 16 Bytes
QuantizeError = [10825.3,9786.82,9464.59,8859.08,8580.79,7860.65,6681.58]
Recall1 = [0.4597,0.4795,0.4867,0.5118,0.5116,0.5251,0.5649]
Recall10_10 = [0.55253,0.57452,0.58149,0.59332,0.60562,0.6193,0.6423]
plt.plot(nc, QuantizeError, label = "16 Bytes", marker = "o")


# 32 Bytes
QuantizeError = [4334.22,3991.61,3871.34,3605.59,3404.96,3097.87,2640.81]
Recall1 = [0.625,0.6428,0.6427,0.6549,0.6665,0.6735,0.6916]
Recall10_10 = [0.6938,0.7106,0.71115,0.71969,0.7305,0.7411,0.75440]
plt.plot(nc, QuantizeError, label = "32 Bytes", marker = "o")


# 32 Bytes 10000 Centroids
NumClusters = range(10, 31)
Recall_WholeSet = [5.8685, 5.9887, 6.0926, 6.1826, 6.2657, 6.343, 6.4096, 6.4714, 6.525, 6.5752, 6.6195, 6.6657, 6.7039, 6.7381, 6.7716, 6.802, 6.8322, 6.8621, 6.8867, 6.9091, 6.9287]
Recall_Subset = [4.9073, 5.0879, 5.2462, 5.3862, 5.5168, 5.6328, 5.7396, 5.8348, 5.9236, 6.0108, 6.087, 6.1601, 6.232, 6.2956, 6.3554, 6.4156, 6.47, 6.5234, 6.5707, 6.615, 6.661]

# 8 Bytes
Recall_WholeSet = [3.7495, 3.7906, 3.8221, 3.8494, 3.8754, 3.9012, 3.9226, 3.9403, 3.961, 3.9734, 3.9854, 3.9988, 4.0084, 4.0167, 4.0255, 4.0329, 4.0392, 4.0472, 4.0538, 4.0585, 4.0638]
Recall_Subset = [3.964, 4.0538, 4.1301, 4.1895, 4.2487, 4.2989, 4.3435, 4.3797, 4.4142, 4.4508, 4.4797, 4.5088, 4.5359, 4.5623, 4.5793, 4.6014, 4.6221, 4.6404, 4.6582, 4.6735, 4.6891]

# 16 bytes
#Recall_WholeSet = [5.0229, 5.0962, 5.1671, 5.2223, 5.2724, 5.3168, 5.3573, 5.3958, 5.4306, 5.4594, 5.4868, 5.5146, 5.5405, 5.5619, 5.5811, 5.5989, 5.6154, 5.6332, 5.6487, 5.6609, 5.671]
#Recall_SUbset =   [4.5932, 4.7311, 4.8545, 4.9571, 5.0552, 5.1392, 5.2164, 5.2848, 5.3506, 5.41, 5.4632, 5.5127, 5.5633, 5.6057, 5.6488, 5.6918, 5.727, 5.7643, 5.797, 5.8288, 5.8575]

Recall_WholeSet_Ratio = []
Recall_Subset_Ratio = []
for i in range(0, 20):
    Recall_WholeSet_Ratio.append(Recall_WholeSet[i+1] / Recall_WholeSet[i])
    Recall_Subset_Ratio.append(Recall_Subset[i+1] / Recall_Subset[i])


code_length = [8, 16, 32, 64]
SIFT1B_NC =   np.array([8.5, 6.4, 4.2, 3.7]) * 1000000
DEEP1B_NC =   np.array([7.4, 5.3, 3.6, 3.1]) * 1000000
#plt.plot(code_length, SIFT1B_NC, label = "SIFT1B NC", marker = "o")
#plt.plot(code_length, DEEP1B_NC, label = "DEEP1B NC", marker = "o")

code_length = [10, 20, 25, 50]
Turing1B_NC = np.array([7.8, 4.6, 2.5, 1.9]) * 1000000
Space1B_NC =  np.array([9.4, 6.7, 3.9, 2.3]) * 1000000
#plt.plot(code_length, Turing1B_NC, label = "Turing1B NC", marker = "o")
#plt.plot(code_length, Space1B_NC, label = "Space1B NC", marker = "o")

#plt.plot(NumClusters[1:], Recall_WholeSet_Ratio, marker = "o")
#plt.plot(NumClusters[1:], Recall_Subset_Ratio, marker = "o")
plt.xlabel("NC", fontsize = 18)
plt.ylabel("Quantization Error", fontsize = 18)
plt.title("", fontsize = 18, fontweight="bold")
plt.legend(fontsize = 10)
plt.show()








